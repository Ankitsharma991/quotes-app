{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/React-Learning/quotes-app/src/pages/AllQuotes.js\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Jane\",\n  text: \"The best way to predict your future is to create it.\"\n}, {\n  id: \"q2\",\n  author: \"Bob\",\n  text: \"Believe you can and you're halfway there.\"\n}, {\n  id: \"q3\",\n  author: \"Alice\",\n  text: \"Success is not final, failure is not fatal: it is the courage to continue that counts.\"\n}, {\n  id: \"q4\",\n  author: \"Jack\",\n  text: \"Don't watch the clock; do what it does. Keep going.\"\n}, {\n  id: \"q5\",\n  author: \"Sara\",\n  text: \"Strive not to be a success, but rather to be of value.\"\n}];\nconst AllQuotes = () => {\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_QUOTES\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","AllQuotes","quotes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ankit/Desktop/React-Learning/quotes-app/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Jane\",\n    text: \"The best way to predict your future is to create it.\",\n  },\n  {\n    id: \"q2\",\n    author: \"Bob\",\n    text: \"Believe you can and you're halfway there.\",\n  },\n  {\n    id: \"q3\",\n    author: \"Alice\",\n    text: \"Success is not final, failure is not fatal: it is the courage to continue that counts.\",\n  },\n  {\n    id: \"q4\",\n    author: \"Jack\",\n    text: \"Don't watch the clock; do what it does. Keep going.\",\n  },\n  {\n    id: \"q5\",\n    author: \"Sara\",\n    text: \"Strive not to be a success, but rather to be of value.\",\n  },\n];\n\nconst AllQuotes = () => {\n  return <QuoteList quotes={DUMMY_QUOTES} />;\n};\nexport default AllQuotes;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBAAOL,OAAA,CAACF,SAAS;IAACQ,MAAM,EAAEL;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC5C,CAAC;AAACC,EAAA,GAFIN,SAAS;AAGf,eAAeA,SAAS;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}