{"ast":null,"code":"var _jsxFileName = \"/home/ankit/Desktop/React-Learning/quotes-app/src/components/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === \"completed\" && loadedComments) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.len)) return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"oTYmLyIqgQIy/H9X8mxEcyELwnw=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","jsxDEV","_jsxDEV","Comments","_s","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","len","onClick","onAddedComment","_c","$RefreshReg$"],"sources":["/home/ankit/Desktop/React-Learning/quotes-app/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if(status==='completed' && (!loadedComments || loadedComments.len))\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMc,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAM;IAAEc;EAAQ,CAAC,GAAGD,MAAM;EAC1B,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGf,OAAO,CAACC,cAAc,CAAC;EAE7EN,SAAS,CAAC,MAAM;IACdiB,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACA,OAAO,EAAEC,WAAW,CAAC,CAAC;EAE1B,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM,CAAC,CAAC;EACpC,IAAIC,QAAQ;EACZ,IAAIL,MAAM,KAAK,SAAS,EAAE;IACxBK,QAAQ,gBACNb,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBf,OAAA,CAACH,cAAc;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAErB;EACH;EAEA,IAAIX,MAAM,KAAK,WAAW,IAAIE,cAAc,EAAE;IAC5CG,QAAQ,gBAAGb,OAAA,CAACF,YAAY;MAACe,QAAQ,EAAEH;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACvD;EAEA,IAAGX,MAAM,KAAG,WAAW,KAAK,CAACE,cAAc,IAAIA,cAAc,CAACU,GAAG,CAAC,EAElE,oBACEpB,OAAA;IAASc,SAAS,EAAErB,OAAO,CAACoB,QAAS;IAAAE,QAAA,gBACnCf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACrB,CAAChB,eAAe,iBACfH,OAAA;MAAQc,SAAS,EAAC,KAAK;MAACO,OAAO,EAAEV,sBAAuB;MAAAI,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,EACAhB,eAAe,iBACdH,OAAA,CAACN,cAAc;MACbY,OAAO,EAAED,MAAM,CAACC,OAAQ;MACxBgB,cAAc,EAAEV;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvC,eACDnB,OAAA;MAAAe,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEd,CAAC;AAACjB,EAAA,CA/CID,QAAQ;EAAA,QAEGT,SAAS,EAE8BG,OAAO;AAAA;AAAA4B,EAAA,GAJzDtB,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}